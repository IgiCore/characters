// <auto-generated />
// ReSharper disable all

using System;
using System.Data.Entity.Migrations;
using System.CodeDom.Compiler;
using System.Data.Entity.Migrations.Infrastructure;

namespace IgiCore.Characters.Server.Migrations
{
    [GeneratedCode("NFive.Migration", "0.2 Alpha Build 119")]
    public class Init : DbMigration, IMigrationMetadata
    {
        string IMigrationMetadata.Id => "201903220528015_Init";
        
        string IMigrationMetadata.Source => null;
        
        string IMigrationMetadata.Target => "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";
        
        public override void Up()
        {
            CreateTable(
                "dbo.Apparels",
                c => new
                    {
                        Id = c.Guid(nullable: false),
                        Face_Type = c.Int(nullable: false),
                        Face_Index = c.Int(nullable: false),
                        Face_Texture = c.Int(nullable: false),
                        Head_Type = c.Int(nullable: false),
                        Head_Index = c.Int(nullable: false),
                        Head_Texture = c.Int(nullable: false),
                        Hair_Type = c.Int(nullable: false),
                        Hair_Index = c.Int(nullable: false),
                        Hair_Texture = c.Int(nullable: false),
                        Torso_Type = c.Int(nullable: false),
                        Torso_Index = c.Int(nullable: false),
                        Torso_Texture = c.Int(nullable: false),
                        Torso2_Type = c.Int(nullable: false),
                        Torso2_Index = c.Int(nullable: false),
                        Torso2_Texture = c.Int(nullable: false),
                        Legs_Type = c.Int(nullable: false),
                        Legs_Index = c.Int(nullable: false),
                        Legs_Texture = c.Int(nullable: false),
                        Hands_Type = c.Int(nullable: false),
                        Hands_Index = c.Int(nullable: false),
                        Hands_Texture = c.Int(nullable: false),
                        Shoes_Type = c.Int(nullable: false),
                        Shoes_Index = c.Int(nullable: false),
                        Shoes_Texture = c.Int(nullable: false),
                        Special1_Type = c.Int(nullable: false),
                        Special1_Index = c.Int(nullable: false),
                        Special1_Texture = c.Int(nullable: false),
                        Special2_Type = c.Int(nullable: false),
                        Special2_Index = c.Int(nullable: false),
                        Special2_Texture = c.Int(nullable: false),
                        Special3_Type = c.Int(nullable: false),
                        Special3_Index = c.Int(nullable: false),
                        Special3_Texture = c.Int(nullable: false),
                        Textures_Type = c.Int(nullable: false),
                        Textures_Index = c.Int(nullable: false),
                        Textures_Texture = c.Int(nullable: false),
                        Hat_Type = c.Int(nullable: false),
                        Hat_Index = c.Int(nullable: false),
                        Hat_Texture = c.Int(nullable: false),
                        Glasses_Type = c.Int(nullable: false),
                        Glasses_Index = c.Int(nullable: false),
                        Glasses_Texture = c.Int(nullable: false),
                        EarPiece_Type = c.Int(nullable: false),
                        EarPiece_Index = c.Int(nullable: false),
                        EarPiece_Texture = c.Int(nullable: false),
                        Unknown3_Type = c.Int(nullable: false),
                        Unknown3_Index = c.Int(nullable: false),
                        Unknown3_Texture = c.Int(nullable: false),
                        Unknown4_Type = c.Int(nullable: false),
                        Unknown4_Index = c.Int(nullable: false),
                        Unknown4_Texture = c.Int(nullable: false),
                        Unknown5_Type = c.Int(nullable: false),
                        Unknown5_Index = c.Int(nullable: false),
                        Unknown5_Texture = c.Int(nullable: false),
                        Watch_Type = c.Int(nullable: false),
                        Watch_Index = c.Int(nullable: false),
                        Watch_Texture = c.Int(nullable: false),
                        Wristband_Type = c.Int(nullable: false),
                        Wristband_Index = c.Int(nullable: false),
                        Wristband_Texture = c.Int(nullable: false),
                        Unknown8_Type = c.Int(nullable: false),
                        Unknown8_Index = c.Int(nullable: false),
                        Unknown8_Texture = c.Int(nullable: false),
                        Unknown9_Type = c.Int(nullable: false),
                        Unknown9_Index = c.Int(nullable: false),
                        Unknown9_Texture = c.Int(nullable: false),
                        Created = c.DateTime(nullable: false, precision: 0),
                        Deleted = c.DateTime(precision: 0),
                    })
                .PrimaryKey(t => t.Id);
            
            CreateTable(
                "dbo.Characters",
                c => new
                    {
                        Id = c.Guid(nullable: false),
                        Forename = c.String(nullable: false, maxLength: 100, unicode: false),
                        Middlename = c.String(maxLength: 100, unicode: false),
                        Surname = c.String(nullable: false, maxLength: 100, unicode: false),
                        DateOfBirth = c.DateTime(nullable: false, precision: 0),
                        Gender = c.Short(nullable: false),
                        Alive = c.Boolean(nullable: false, storeType: "bit"),
                        Health = c.Int(nullable: false),
                        Armor = c.Int(nullable: false),
                        Ssn = c.Int(nullable: false),
                        Position_X = c.Single(nullable: false),
                        Position_Y = c.Single(nullable: false),
                        Position_Z = c.Single(nullable: false),
                        Model = c.String(nullable: false, maxLength: 200, unicode: false),
                        WalkingStyle = c.String(nullable: false, maxLength: 200, unicode: false),
                        ApparelId = c.Guid(nullable: false),
                        AppearanceId = c.Guid(nullable: false),
                        HeritageId = c.Guid(nullable: false),
                        LastPlayed = c.DateTime(precision: 0),
                        UserId = c.Guid(nullable: false),
                        Created = c.DateTime(nullable: false, precision: 0),
                        Deleted = c.DateTime(precision: 0),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo.Apparels", t => t.ApparelId, cascadeDelete: true)
                .ForeignKey("dbo.Appearances", t => t.AppearanceId, cascadeDelete: true)
                .ForeignKey("dbo.Heritages", t => t.HeritageId, cascadeDelete: true)
                .ForeignKey("dbo.Users", t => t.UserId, cascadeDelete: true)
                .Index(t => t.ApparelId)
                .Index(t => t.AppearanceId)
                .Index(t => t.HeritageId)
                .Index(t => t.UserId);
            
            CreateTable(
                "dbo.Appearances",
                c => new
                    {
                        Id = c.Guid(nullable: false),
                        EyeColorId = c.Int(nullable: false),
                        HairColorId = c.Int(nullable: false),
                        HairHighlightColor = c.Int(nullable: false),
                        Beard_Type = c.Int(nullable: false),
                        Beard_Index = c.Int(nullable: false),
                        Beard_Opacity = c.Single(nullable: false),
                        Beard_ColorType = c.Int(nullable: false),
                        Beard_ColorId = c.Int(nullable: false),
                        Beard_SecondColorId = c.Int(nullable: false),
                        Eyebrows_Type = c.Int(nullable: false),
                        Eyebrows_Index = c.Int(nullable: false),
                        Eyebrows_Opacity = c.Single(nullable: false),
                        Eyebrows_ColorType = c.Int(nullable: false),
                        Eyebrows_ColorId = c.Int(nullable: false),
                        Eyebrows_SecondColorId = c.Int(nullable: false),
                        Age_Type = c.Int(nullable: false),
                        Age_Index = c.Int(nullable: false),
                        Age_Opacity = c.Single(nullable: false),
                        Age_ColorType = c.Int(nullable: false),
                        Age_ColorId = c.Int(nullable: false),
                        Age_SecondColorId = c.Int(nullable: false),
                        Makeup_Type = c.Int(nullable: false),
                        Makeup_Index = c.Int(nullable: false),
                        Makeup_Opacity = c.Single(nullable: false),
                        Makeup_ColorType = c.Int(nullable: false),
                        Makeup_ColorId = c.Int(nullable: false),
                        Makeup_SecondColorId = c.Int(nullable: false),
                        Blush_Type = c.Int(nullable: false),
                        Blush_Index = c.Int(nullable: false),
                        Blush_Opacity = c.Single(nullable: false),
                        Blush_ColorType = c.Int(nullable: false),
                        Blush_ColorId = c.Int(nullable: false),
                        Blush_SecondColorId = c.Int(nullable: false),
                        Complexion_Type = c.Int(nullable: false),
                        Complexion_Index = c.Int(nullable: false),
                        Complexion_Opacity = c.Single(nullable: false),
                        Complexion_ColorType = c.Int(nullable: false),
                        Complexion_ColorId = c.Int(nullable: false),
                        Complexion_SecondColorId = c.Int(nullable: false),
                        SunDamage_Type = c.Int(nullable: false),
                        SunDamage_Index = c.Int(nullable: false),
                        SunDamage_Opacity = c.Single(nullable: false),
                        SunDamage_ColorType = c.Int(nullable: false),
                        SunDamage_ColorId = c.Int(nullable: false),
                        SunDamage_SecondColorId = c.Int(nullable: false),
                        Lipstick_Type = c.Int(nullable: false),
                        Lipstick_Index = c.Int(nullable: false),
                        Lipstick_Opacity = c.Single(nullable: false),
                        Lipstick_ColorType = c.Int(nullable: false),
                        Lipstick_ColorId = c.Int(nullable: false),
                        Lipstick_SecondColorId = c.Int(nullable: false),
                        MolesAndFreckles_Type = c.Int(nullable: false),
                        MolesAndFreckles_Index = c.Int(nullable: false),
                        MolesAndFreckles_Opacity = c.Single(nullable: false),
                        MolesAndFreckles_ColorType = c.Int(nullable: false),
                        MolesAndFreckles_ColorId = c.Int(nullable: false),
                        MolesAndFreckles_SecondColorId = c.Int(nullable: false),
                        Chest_Type = c.Int(nullable: false),
                        Chest_Index = c.Int(nullable: false),
                        Chest_Opacity = c.Single(nullable: false),
                        Chest_ColorType = c.Int(nullable: false),
                        Chest_ColorId = c.Int(nullable: false),
                        Chest_SecondColorId = c.Int(nullable: false),
                        Blemishes_Type = c.Int(nullable: false),
                        Blemishes_Index = c.Int(nullable: false),
                        Blemishes_Opacity = c.Single(nullable: false),
                        Blemishes_ColorType = c.Int(nullable: false),
                        Blemishes_ColorId = c.Int(nullable: false),
                        Blemishes_SecondColorId = c.Int(nullable: false),
                        Created = c.DateTime(nullable: false, precision: 0),
                        Deleted = c.DateTime(precision: 0),
                    })
                .PrimaryKey(t => t.Id);
            
            CreateTable(
                "dbo.Heritages",
                c => new
                    {
                        Id = c.Guid(nullable: false),
                        Created = c.DateTime(nullable: false, precision: 0),
                        Deleted = c.DateTime(precision: 0),
                        Mother = c.Int(nullable: false),
                        Father = c.Int(nullable: false),
                        Resemblance = c.Single(nullable: false),
                        SkinTone = c.Single(nullable: false),
                    })
                .PrimaryKey(t => t.Id);
            
            CreateTable(
                "dbo.CharacterSessions",
                c => new
                    {
                        Id = c.Guid(nullable: false),
                        Created = c.DateTime(nullable: false, precision: 0),
                        Connected = c.DateTime(precision: 0),
                        Disconnected = c.DateTime(precision: 0),
                        CharacterId = c.Guid(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo.Characters", t => t.CharacterId, cascadeDelete: true)
                .Index(t => t.CharacterId);
            
        }
        
        public override void Down()
        {
            DropForeignKey("dbo.CharacterSessions", "CharacterId", "dbo.Characters");
            DropForeignKey("dbo.Characters", "UserId", "dbo.Users");
            DropForeignKey("dbo.Characters", "HeritageId", "dbo.Heritages");
            DropForeignKey("dbo.Characters", "AppearanceId", "dbo.Appearances");
            DropForeignKey("dbo.Characters", "ApparelId", "dbo.Apparels");
			DropIndex("dbo.CharacterSessions", new[] { "CharacterId" });
            DropIndex("dbo.Characters", new[] { "UserId" });
            DropIndex("dbo.Characters", new[] { "HeritageId" });
            DropIndex("dbo.Characters", new[] { "AppearanceId" });
            DropIndex("dbo.Characters", new[] { "ApparelId" });
			DropTable("dbo.CharacterSessions");
            DropTable("dbo.Heritages");
            DropTable("dbo.Appearances");
            DropTable("dbo.Characters");
            DropTable("dbo.Apparels");
        }
    }
}
