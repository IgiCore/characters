// <auto-generated />
// ReSharper disable all

using System;
using System.Data.Entity.Migrations;
using System.CodeDom.Compiler;
using System.Data.Entity.Migrations.Infrastructure;

namespace IgiCore.Characters.Server.Migrations
{
    [GeneratedCode("NFive.Migration", "0.2 Alpha Build 119")]
    public class Init : DbMigration, IMigrationMetadata
    {
        string IMigrationMetadata.Id => "201903220839516_Init";
        
        string IMigrationMetadata.Source => null;
        
        string IMigrationMetadata.Target => "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";
        
        public override void Up()
        {
            CreateTable(
                "dbo.Apparels",
                c => new
                    {
                        Id = c.Guid(nullable: false),
                        Face_Type = c.Int(nullable: false),
                        Face_Index = c.Int(nullable: false),
                        Face_Texture = c.Int(nullable: false),
                        Head_Type = c.Int(nullable: false),
                        Head_Index = c.Int(nullable: false),
                        Head_Texture = c.Int(nullable: false),
                        Hair_Type = c.Int(nullable: false),
                        Hair_Index = c.Int(nullable: false),
                        Hair_Texture = c.Int(nullable: false),
                        Torso_Type = c.Int(nullable: false),
                        Torso_Index = c.Int(nullable: false),
                        Torso_Texture = c.Int(nullable: false),
                        Torso2_Type = c.Int(nullable: false),
                        Torso2_Index = c.Int(nullable: false),
                        Torso2_Texture = c.Int(nullable: false),
                        Legs_Type = c.Int(nullable: false),
                        Legs_Index = c.Int(nullable: false),
                        Legs_Texture = c.Int(nullable: false),
                        Hands_Type = c.Int(nullable: false),
                        Hands_Index = c.Int(nullable: false),
                        Hands_Texture = c.Int(nullable: false),
                        Shoes_Type = c.Int(nullable: false),
                        Shoes_Index = c.Int(nullable: false),
                        Shoes_Texture = c.Int(nullable: false),
                        Special1_Type = c.Int(nullable: false),
                        Special1_Index = c.Int(nullable: false),
                        Special1_Texture = c.Int(nullable: false),
                        Special2_Type = c.Int(nullable: false),
                        Special2_Index = c.Int(nullable: false),
                        Special2_Texture = c.Int(nullable: false),
                        Special3_Type = c.Int(nullable: false),
                        Special3_Index = c.Int(nullable: false),
                        Special3_Texture = c.Int(nullable: false),
                        Textures_Type = c.Int(nullable: false),
                        Textures_Index = c.Int(nullable: false),
                        Textures_Texture = c.Int(nullable: false),
                        Hat_Type = c.Int(nullable: false),
                        Hat_Index = c.Int(nullable: false),
                        Hat_Texture = c.Int(nullable: false),
                        Glasses_Type = c.Int(nullable: false),
                        Glasses_Index = c.Int(nullable: false),
                        Glasses_Texture = c.Int(nullable: false),
                        EarPiece_Type = c.Int(nullable: false),
                        EarPiece_Index = c.Int(nullable: false),
                        EarPiece_Texture = c.Int(nullable: false),
                        Unknown3_Type = c.Int(nullable: false),
                        Unknown3_Index = c.Int(nullable: false),
                        Unknown3_Texture = c.Int(nullable: false),
                        Unknown4_Type = c.Int(nullable: false),
                        Unknown4_Index = c.Int(nullable: false),
                        Unknown4_Texture = c.Int(nullable: false),
                        Unknown5_Type = c.Int(nullable: false),
                        Unknown5_Index = c.Int(nullable: false),
                        Unknown5_Texture = c.Int(nullable: false),
                        Watch_Type = c.Int(nullable: false),
                        Watch_Index = c.Int(nullable: false),
                        Watch_Texture = c.Int(nullable: false),
                        Wristband_Type = c.Int(nullable: false),
                        Wristband_Index = c.Int(nullable: false),
                        Wristband_Texture = c.Int(nullable: false),
                        Unknown8_Type = c.Int(nullable: false),
                        Unknown8_Index = c.Int(nullable: false),
                        Unknown8_Texture = c.Int(nullable: false),
                        Unknown9_Type = c.Int(nullable: false),
                        Unknown9_Index = c.Int(nullable: false),
                        Unknown9_Texture = c.Int(nullable: false),
                        Created = c.DateTime(nullable: false, precision: 0),
                        Deleted = c.DateTime(precision: 0),
                    })
                .PrimaryKey(t => t.Id);
            
            CreateTable(
                "dbo.Characters",
                c => new
                    {
                        Id = c.Guid(nullable: false),
                        Forename = c.String(nullable: false, maxLength: 100, unicode: false),
                        Middlename = c.String(maxLength: 100, unicode: false),
                        Surname = c.String(nullable: false, maxLength: 100, unicode: false),
                        DateOfBirth = c.DateTime(nullable: false, precision: 0),
                        Gender = c.Short(nullable: false),
                        Alive = c.Boolean(nullable: false, storeType: "bit"),
                        Health = c.Int(nullable: false),
                        Armor = c.Int(nullable: false),
                        Ssn = c.Int(nullable: false),
                        Position_X = c.Single(nullable: false),
                        Position_Y = c.Single(nullable: false),
                        Position_Z = c.Single(nullable: false),
                        Model = c.String(nullable: false, maxLength: 200, unicode: false),
                        WalkingStyle = c.String(nullable: false, maxLength: 200, unicode: false),
                        ApparelId = c.Guid(nullable: false),
                        AppearanceId = c.Guid(nullable: false),
                        HeritageId = c.Guid(nullable: false),
                        LastPlayed = c.DateTime(precision: 0),
                        UserId = c.Guid(nullable: false),
                        Created = c.DateTime(nullable: false, precision: 0),
                        Deleted = c.DateTime(precision: 0),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo.Apparels", t => t.ApparelId, cascadeDelete: true)
                .ForeignKey("dbo.Appearances", t => t.AppearanceId, cascadeDelete: true)
                .ForeignKey("dbo.Heritages", t => t.HeritageId, cascadeDelete: true)
                .ForeignKey("dbo.Users", t => t.UserId, cascadeDelete: true)
                .Index(t => t.ApparelId)
                .Index(t => t.AppearanceId)
                .Index(t => t.HeritageId)
                .Index(t => t.UserId);
            
            CreateTable(
                "dbo.Appearances",
                c => new
                    {
                        Id = c.Guid(nullable: false),
                        EyeColorId = c.Int(nullable: false),
                        HairColorId = c.Int(nullable: false),
                        HairHighlightColor = c.Int(nullable: false),
                        Cheeks = c.Single(nullable: false),
                        EyesWidth = c.Single(nullable: false),
                        Lips = c.Single(nullable: false),
                        Brows_X = c.Single(nullable: false),
                        Brows_Y = c.Single(nullable: false),
                        CheekBones_X = c.Single(nullable: false),
                        CheekBones_Y = c.Single(nullable: false),
                        ChinProfile_X = c.Single(nullable: false),
                        ChinProfile_Y = c.Single(nullable: false),
                        ChinShape_X = c.Single(nullable: false),
                        ChinShape_Y = c.Single(nullable: false),
                        Jaw_X = c.Single(nullable: false),
                        Jaw_Y = c.Single(nullable: false),
                        Nose_X = c.Single(nullable: false),
                        Nose_Y = c.Single(nullable: false),
                        NoseProfile_X = c.Single(nullable: false),
                        NoseProfile_Y = c.Single(nullable: false),
                        NoseTip_X = c.Single(nullable: false),
                        NoseTip_Y = c.Single(nullable: false),
                        Age_Index = c.Int(nullable: false),
                        Age_Opacity = c.Single(nullable: false),
                        Age_ColorType = c.Int(nullable: false),
                        Age_ColorId = c.Int(nullable: false),
                        Age_SecondColorId = c.Int(nullable: false),
                        Beard_Index = c.Int(nullable: false),
                        Beard_Opacity = c.Single(nullable: false),
                        Beard_ColorType = c.Int(nullable: false),
                        Beard_ColorId = c.Int(nullable: false),
                        Beard_SecondColorId = c.Int(nullable: false),
                        Blush_Index = c.Int(nullable: false),
                        Blush_Opacity = c.Single(nullable: false),
                        Blush_ColorType = c.Int(nullable: false),
                        Blush_ColorId = c.Int(nullable: false),
                        Blush_SecondColorId = c.Int(nullable: false),
                        Blemishes_Index = c.Int(nullable: false),
                        Blemishes_Opacity = c.Single(nullable: false),
                        Blemishes_ColorType = c.Int(nullable: false),
                        Blemishes_ColorId = c.Int(nullable: false),
                        Blemishes_SecondColorId = c.Int(nullable: false),
                        Chest_Index = c.Int(nullable: false),
                        Chest_Opacity = c.Single(nullable: false),
                        Chest_ColorType = c.Int(nullable: false),
                        Chest_ColorId = c.Int(nullable: false),
                        Chest_SecondColorId = c.Int(nullable: false),
                        Complexion_Index = c.Int(nullable: false),
                        Complexion_Opacity = c.Single(nullable: false),
                        Complexion_ColorType = c.Int(nullable: false),
                        Complexion_ColorId = c.Int(nullable: false),
                        Complexion_SecondColorId = c.Int(nullable: false),
                        Eyebrows_Index = c.Int(nullable: false),
                        Eyebrows_Opacity = c.Single(nullable: false),
                        Eyebrows_ColorType = c.Int(nullable: false),
                        Eyebrows_ColorId = c.Int(nullable: false),
                        Eyebrows_SecondColorId = c.Int(nullable: false),
                        Lipstick_Index = c.Int(nullable: false),
                        Lipstick_Opacity = c.Single(nullable: false),
                        Lipstick_ColorType = c.Int(nullable: false),
                        Lipstick_ColorId = c.Int(nullable: false),
                        Lipstick_SecondColorId = c.Int(nullable: false),
                        Makeup_Index = c.Int(nullable: false),
                        Makeup_Opacity = c.Single(nullable: false),
                        Makeup_ColorType = c.Int(nullable: false),
                        Makeup_ColorId = c.Int(nullable: false),
                        Makeup_SecondColorId = c.Int(nullable: false),
                        MolesAndFreckles_Index = c.Int(nullable: false),
                        MolesAndFreckles_Opacity = c.Single(nullable: false),
                        MolesAndFreckles_ColorType = c.Int(nullable: false),
                        MolesAndFreckles_ColorId = c.Int(nullable: false),
                        MolesAndFreckles_SecondColorId = c.Int(nullable: false),
                        SunDamage_Index = c.Int(nullable: false),
                        SunDamage_Opacity = c.Single(nullable: false),
                        SunDamage_ColorType = c.Int(nullable: false),
                        SunDamage_ColorId = c.Int(nullable: false),
                        SunDamage_SecondColorId = c.Int(nullable: false),
                        Created = c.DateTime(nullable: false, precision: 0),
                        Deleted = c.DateTime(precision: 0),
                    })
                .PrimaryKey(t => t.Id);
            
            CreateTable(
                "dbo.Heritages",
                c => new
                    {
                        Id = c.Guid(nullable: false),
                        Mother = c.Int(nullable: false),
                        Father = c.Int(nullable: false),
                        Resemblance = c.Single(nullable: false),
                        SkinTone = c.Single(nullable: false),
                        Created = c.DateTime(nullable: false, precision: 0),
                        Deleted = c.DateTime(precision: 0),
                    })
                .PrimaryKey(t => t.Id);
            
            CreateTable(
                "dbo.CharacterSessions",
                c => new
                    {
                        Id = c.Guid(nullable: false),
                        Created = c.DateTime(nullable: false, precision: 0),
                        Connected = c.DateTime(precision: 0),
                        Disconnected = c.DateTime(precision: 0),
                        CharacterId = c.Guid(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo.Characters", t => t.CharacterId, cascadeDelete: true)
                .Index(t => t.CharacterId);
            
        }
        
        public override void Down()
        {
            DropForeignKey("dbo.CharacterSessions", "CharacterId", "dbo.Characters");
            DropForeignKey("dbo.Characters", "UserId", "dbo.Users");
            DropForeignKey("dbo.Characters", "HeritageId", "dbo.Heritages");
            DropForeignKey("dbo.Characters", "AppearanceId", "dbo.Appearances");
            DropForeignKey("dbo.Characters", "ApparelId", "dbo.Apparels");
            DropIndex("dbo.CharacterSessions", new[] { "CharacterId" });
            DropIndex("dbo.Characters", new[] { "UserId" });
            DropIndex("dbo.Characters", new[] { "HeritageId" });
            DropIndex("dbo.Characters", new[] { "AppearanceId" });
            DropIndex("dbo.Characters", new[] { "ApparelId" });
            DropTable("dbo.CharacterSessions");
            DropTable("dbo.Heritages");
            DropTable("dbo.Appearances");
            DropTable("dbo.Characters");
            DropTable("dbo.Apparels");
        }
    }
}
