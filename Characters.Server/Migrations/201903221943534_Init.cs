// <auto-generated />
// ReSharper disable all

using System;
using System.Data.Entity.Migrations;
using System.CodeDom.Compiler;
using System.Data.Entity.Migrations.Infrastructure;

namespace IgiCore.Characters.Server.Migrations
{
    [GeneratedCode("NFive.Migration", "0.2 Alpha Build 119")]
    public class Init : DbMigration, IMigrationMetadata
    {
        string IMigrationMetadata.Id => "201903221943534_Init";
        
        string IMigrationMetadata.Source => null;
        
        string IMigrationMetadata.Target => "";
        
        public override void Up()
        {
            CreateTable(
                "dbo.Apparels",
                c => new
                    {
                        Id = c.Guid(nullable: false),
                        Face_Type = c.Int(nullable: false),
                        Face_Index = c.Int(nullable: false),
                        Face_Texture = c.Int(nullable: false),
                        Head_Type = c.Int(nullable: false),
                        Head_Index = c.Int(nullable: false),
                        Head_Texture = c.Int(nullable: false),
                        Hair_Type = c.Int(nullable: false),
                        Hair_Index = c.Int(nullable: false),
                        Hair_Texture = c.Int(nullable: false),
                        Torso_Type = c.Int(nullable: false),
                        Torso_Index = c.Int(nullable: false),
                        Torso_Texture = c.Int(nullable: false),
                        Torso2_Type = c.Int(nullable: false),
                        Torso2_Index = c.Int(nullable: false),
                        Torso2_Texture = c.Int(nullable: false),
                        Legs_Type = c.Int(nullable: false),
                        Legs_Index = c.Int(nullable: false),
                        Legs_Texture = c.Int(nullable: false),
                        Hands_Type = c.Int(nullable: false),
                        Hands_Index = c.Int(nullable: false),
                        Hands_Texture = c.Int(nullable: false),
                        Shoes_Type = c.Int(nullable: false),
                        Shoes_Index = c.Int(nullable: false),
                        Shoes_Texture = c.Int(nullable: false),
                        Special1_Type = c.Int(nullable: false),
                        Special1_Index = c.Int(nullable: false),
                        Special1_Texture = c.Int(nullable: false),
                        Special2_Type = c.Int(nullable: false),
                        Special2_Index = c.Int(nullable: false),
                        Special2_Texture = c.Int(nullable: false),
                        Special3_Type = c.Int(nullable: false),
                        Special3_Index = c.Int(nullable: false),
                        Special3_Texture = c.Int(nullable: false),
                        Textures_Type = c.Int(nullable: false),
                        Textures_Index = c.Int(nullable: false),
                        Textures_Texture = c.Int(nullable: false),
                        Hat_Type = c.Int(nullable: false),
                        Hat_Index = c.Int(nullable: false),
                        Hat_Texture = c.Int(nullable: false),
                        Glasses_Type = c.Int(nullable: false),
                        Glasses_Index = c.Int(nullable: false),
                        Glasses_Texture = c.Int(nullable: false),
                        EarPiece_Type = c.Int(nullable: false),
                        EarPiece_Index = c.Int(nullable: false),
                        EarPiece_Texture = c.Int(nullable: false),
                        Unknown3_Type = c.Int(nullable: false),
                        Unknown3_Index = c.Int(nullable: false),
                        Unknown3_Texture = c.Int(nullable: false),
                        Unknown4_Type = c.Int(nullable: false),
                        Unknown4_Index = c.Int(nullable: false),
                        Unknown4_Texture = c.Int(nullable: false),
                        Unknown5_Type = c.Int(nullable: false),
                        Unknown5_Index = c.Int(nullable: false),
                        Unknown5_Texture = c.Int(nullable: false),
                        Watch_Type = c.Int(nullable: false),
                        Watch_Index = c.Int(nullable: false),
                        Watch_Texture = c.Int(nullable: false),
                        Wristband_Type = c.Int(nullable: false),
                        Wristband_Index = c.Int(nullable: false),
                        Wristband_Texture = c.Int(nullable: false),
                        Unknown8_Type = c.Int(nullable: false),
                        Unknown8_Index = c.Int(nullable: false),
                        Unknown8_Texture = c.Int(nullable: false),
                        Unknown9_Type = c.Int(nullable: false),
                        Unknown9_Index = c.Int(nullable: false),
                        Unknown9_Texture = c.Int(nullable: false),
                        Created = c.DateTime(nullable: false, precision: 0),
                        Deleted = c.DateTime(precision: 0),
                    })
                .PrimaryKey(t => t.Id);
            
            CreateTable(
                "dbo.Characters",
                c => new
                    {
                        Id = c.Guid(nullable: false),
                        Forename = c.String(nullable: false, maxLength: 100, unicode: false),
                        Middlename = c.String(maxLength: 100, unicode: false),
                        Surname = c.String(nullable: false, maxLength: 100, unicode: false),
                        DateOfBirth = c.DateTime(nullable: false, precision: 0),
                        Gender = c.Short(nullable: false),
                        Alive = c.Boolean(nullable: false, storeType: "bit"),
                        Health = c.Int(nullable: false),
                        Armor = c.Int(nullable: false),
                        Ssn = c.Int(nullable: false),
                        Position_X = c.Single(nullable: false),
                        Position_Y = c.Single(nullable: false),
                        Position_Z = c.Single(nullable: false),
                        Model = c.String(nullable: false, maxLength: 200, unicode: false),
                        WalkingStyle = c.String(nullable: false, maxLength: 200, unicode: false),
                        ApparelId = c.Guid(nullable: false),
                        AppearanceId = c.Guid(nullable: false),
                        FaceShapeId = c.Guid(nullable: false),
                        HeritageId = c.Guid(nullable: false),
                        LastPlayed = c.DateTime(precision: 0),
                        UserId = c.Guid(nullable: false),
                        Created = c.DateTime(nullable: false, precision: 0),
                        Deleted = c.DateTime(precision: 0),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo.Apparels", t => t.ApparelId, cascadeDelete: true)
                .ForeignKey("dbo.Appearances", t => t.AppearanceId, cascadeDelete: true)
                .ForeignKey("dbo.FaceShapes", t => t.FaceShapeId, cascadeDelete: true)
                .ForeignKey("dbo.Heritages", t => t.HeritageId, cascadeDelete: true)
                .ForeignKey("dbo.Users", t => t.UserId, cascadeDelete: true)
                .Index(t => t.ApparelId)
                .Index(t => t.AppearanceId)
                .Index(t => t.FaceShapeId)
                .Index(t => t.HeritageId)
                .Index(t => t.UserId);
            
            CreateTable(
                "dbo.Appearances",
                c => new
                    {
                        Id = c.Guid(nullable: false),
                        EyeColorId = c.Int(nullable: false),
                        HairColorId = c.Int(nullable: false),
                        HairHighlightColor = c.Int(nullable: false),
                        Cheeks = c.Single(nullable: false),
                        EyesWidth = c.Single(nullable: false),
                        Lips = c.Single(nullable: false),
                        Brows_X = c.Single(nullable: false),
                        Brows_Y = c.Single(nullable: false),
                        CheekBones_X = c.Single(nullable: false),
                        CheekBones_Y = c.Single(nullable: false),
                        ChinProfile_X = c.Single(nullable: false),
                        ChinProfile_Y = c.Single(nullable: false),
                        ChinShape_X = c.Single(nullable: false),
                        ChinShape_Y = c.Single(nullable: false),
                        Jaw_X = c.Single(nullable: false),
                        Jaw_Y = c.Single(nullable: false),
                        Nose_X = c.Single(nullable: false),
                        Nose_Y = c.Single(nullable: false),
                        NoseProfile_X = c.Single(nullable: false),
                        NoseProfile_Y = c.Single(nullable: false),
                        NoseTip_X = c.Single(nullable: false),
                        NoseTip_Y = c.Single(nullable: false),
                        Ageing_Index = c.Int(nullable: false),
                        Ageing_Opacity = c.Single(nullable: false),
                        Ageing_ColorType = c.Int(nullable: false),
                        Ageing_ColorId = c.Int(nullable: false),
                        Ageing_SecondColorId = c.Int(nullable: false),
                        Beard_Index = c.Int(nullable: false),
                        Beard_Opacity = c.Single(nullable: false),
                        Beard_ColorType = c.Int(nullable: false),
                        Beard_ColorId = c.Int(nullable: false),
                        Beard_SecondColorId = c.Int(nullable: false),
                        Blush_Index = c.Int(nullable: false),
                        Blush_Opacity = c.Single(nullable: false),
                        Blush_ColorType = c.Int(nullable: false),
                        Blush_ColorId = c.Int(nullable: false),
                        Blush_SecondColorId = c.Int(nullable: false),
                        Blemishes_Index = c.Int(nullable: false),
                        Blemishes_Opacity = c.Single(nullable: false),
                        Blemishes_ColorType = c.Int(nullable: false),
                        Blemishes_ColorId = c.Int(nullable: false),
                        Blemishes_SecondColorId = c.Int(nullable: false),
                        Chest_Index = c.Int(nullable: false),
                        Chest_Opacity = c.Single(nullable: false),
                        Chest_ColorType = c.Int(nullable: false),
                        Chest_ColorId = c.Int(nullable: false),
                        Chest_SecondColorId = c.Int(nullable: false),
                        Complexion_Index = c.Int(nullable: false),
                        Complexion_Opacity = c.Single(nullable: false),
                        Complexion_ColorType = c.Int(nullable: false),
                        Complexion_ColorId = c.Int(nullable: false),
                        Complexion_SecondColorId = c.Int(nullable: false),
                        Eyebrows_Index = c.Int(nullable: false),
                        Eyebrows_Opacity = c.Single(nullable: false),
                        Eyebrows_ColorType = c.Int(nullable: false),
                        Eyebrows_ColorId = c.Int(nullable: false),
                        Eyebrows_SecondColorId = c.Int(nullable: false),
                        Lipstick_Index = c.Int(nullable: false),
                        Lipstick_Opacity = c.Single(nullable: false),
                        Lipstick_ColorType = c.Int(nullable: false),
                        Lipstick_ColorId = c.Int(nullable: false),
                        Lipstick_SecondColorId = c.Int(nullable: false),
                        Makeup_Index = c.Int(nullable: false),
                        Makeup_Opacity = c.Single(nullable: false),
                        Makeup_ColorType = c.Int(nullable: false),
                        Makeup_ColorId = c.Int(nullable: false),
                        Makeup_SecondColorId = c.Int(nullable: false),
                        MolesAndFreckles_Index = c.Int(nullable: false),
                        MolesAndFreckles_Opacity = c.Single(nullable: false),
                        MolesAndFreckles_ColorType = c.Int(nullable: false),
                        MolesAndFreckles_ColorId = c.Int(nullable: false),
                        MolesAndFreckles_SecondColorId = c.Int(nullable: false),
                        SunDamage_Index = c.Int(nullable: false),
                        SunDamage_Opacity = c.Single(nullable: false),
                        SunDamage_ColorType = c.Int(nullable: false),
                        SunDamage_ColorId = c.Int(nullable: false),
                        SunDamage_SecondColorId = c.Int(nullable: false),
                        Created = c.DateTime(nullable: false, precision: 0),
                        Deleted = c.DateTime(precision: 0),
                    })
                .PrimaryKey(t => t.Id);
            
            CreateTable(
                "dbo.FaceShapes",
                c => new
                    {
                        Id = c.Guid(nullable: false),
                        NoseWidth = c.Single(nullable: false),
                        NosePeakHeight = c.Single(nullable: false),
                        NosePeakLength = c.Single(nullable: false),
                        NoseBoneHeight = c.Single(nullable: false),
                        NosePeakLowering = c.Single(nullable: false),
                        NoseBoneTwist = c.Single(nullable: false),
                        EyeBrowHeight = c.Single(nullable: false),
                        EyeBrowLength = c.Single(nullable: false),
                        CheekBoneHeight = c.Single(nullable: false),
                        CheekBoneWidth = c.Single(nullable: false),
                        CheekWidth = c.Single(nullable: false),
                        EyeOpenings = c.Single(nullable: false),
                        LipThickness = c.Single(nullable: false),
                        JawBoneWidth = c.Single(nullable: false),
                        JawBoneLength = c.Single(nullable: false),
                        ChinBoneLowering = c.Single(nullable: false),
                        ChinBoneLength = c.Single(nullable: false),
                        ChinBoneWidth = c.Single(nullable: false),
                        ChinDimple = c.Single(nullable: false),
                        NeckThickness = c.Single(nullable: false),
                        Created = c.DateTime(nullable: false, precision: 0),
                        Deleted = c.DateTime(precision: 0),
                    })
                .PrimaryKey(t => t.Id);
            
            CreateTable(
                "dbo.Heritages",
                c => new
                    {
                        Id = c.Guid(nullable: false),
                        Mother = c.Int(nullable: false),
                        Father = c.Int(nullable: false),
                        Resemblance = c.Single(nullable: false),
                        SkinTone = c.Single(nullable: false),
                        Created = c.DateTime(nullable: false, precision: 0),
                        Deleted = c.DateTime(precision: 0),
                    })
                .PrimaryKey(t => t.Id);
            
            CreateTable(
                "dbo.CharacterSessions",
                c => new
                    {
                        Id = c.Guid(nullable: false),
                        Created = c.DateTime(nullable: false, precision: 0),
                        Connected = c.DateTime(precision: 0),
                        Disconnected = c.DateTime(precision: 0),
                        CharacterId = c.Guid(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo.Characters", t => t.CharacterId, cascadeDelete: true)
                .Index(t => t.CharacterId);
            
        }
        
        public override void Down()
        {
            DropForeignKey("dbo.CharacterSessions", "CharacterId", "dbo.Characters");
            DropForeignKey("dbo.Characters", "UserId", "dbo.Users");
            DropForeignKey("dbo.Characters", "HeritageId", "dbo.Heritages");
            DropForeignKey("dbo.Characters", "FaceShapeId", "dbo.FaceShapes");
            DropForeignKey("dbo.Characters", "AppearanceId", "dbo.Appearances");
            DropForeignKey("dbo.Characters", "ApparelId", "dbo.Apparels");
            DropIndex("dbo.CharacterSessions", new[] { "CharacterId" });
            DropIndex("dbo.Characters", new[] { "UserId" });
            DropIndex("dbo.Characters", new[] { "HeritageId" });
            DropIndex("dbo.Characters", new[] { "FaceShapeId" });
            DropIndex("dbo.Characters", new[] { "AppearanceId" });
            DropIndex("dbo.Characters", new[] { "ApparelId" });
            DropTable("dbo.CharacterSessions");
            DropTable("dbo.Heritages");
            DropTable("dbo.FaceShapes");
            DropTable("dbo.Appearances");
            DropTable("dbo.Characters");
            DropTable("dbo.Apparels");
        }
    }
}
