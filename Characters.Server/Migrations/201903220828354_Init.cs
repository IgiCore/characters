// <auto-generated />
// ReSharper disable all

using System;
using System.Data.Entity.Migrations;
using System.CodeDom.Compiler;
using System.Data.Entity.Migrations.Infrastructure;

namespace IgiCore.Characters.Server.Migrations
{
    [GeneratedCode("NFive.Migration", "0.2 Alpha Build 119")]
    public class Init : DbMigration, IMigrationMetadata
    {
        string IMigrationMetadata.Id => "201903220828354_Init";
        
        string IMigrationMetadata.Source => null;
        
        string IMigrationMetadata.Target => "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";
        
        public override void Up()
        {
            CreateTable(
                "dbo.Apparels",
                c => new
                    {
                        Id = c.Guid(nullable: false),
                        Face_Type = c.Int(nullable: false),
                        Face_Index = c.Int(nullable: false),
                        Face_Texture = c.Int(nullable: false),
                        Head_Type = c.Int(nullable: false),
                        Head_Index = c.Int(nullable: false),
                        Head_Texture = c.Int(nullable: false),
                        Hair_Type = c.Int(nullable: false),
                        Hair_Index = c.Int(nullable: false),
                        Hair_Texture = c.Int(nullable: false),
                        Torso_Type = c.Int(nullable: false),
                        Torso_Index = c.Int(nullable: false),
                        Torso_Texture = c.Int(nullable: false),
                        Torso2_Type = c.Int(nullable: false),
                        Torso2_Index = c.Int(nullable: false),
                        Torso2_Texture = c.Int(nullable: false),
                        Legs_Type = c.Int(nullable: false),
                        Legs_Index = c.Int(nullable: false),
                        Legs_Texture = c.Int(nullable: false),
                        Hands_Type = c.Int(nullable: false),
                        Hands_Index = c.Int(nullable: false),
                        Hands_Texture = c.Int(nullable: false),
                        Shoes_Type = c.Int(nullable: false),
                        Shoes_Index = c.Int(nullable: false),
                        Shoes_Texture = c.Int(nullable: false),
                        Special1_Type = c.Int(nullable: false),
                        Special1_Index = c.Int(nullable: false),
                        Special1_Texture = c.Int(nullable: false),
                        Special2_Type = c.Int(nullable: false),
                        Special2_Index = c.Int(nullable: false),
                        Special2_Texture = c.Int(nullable: false),
                        Special3_Type = c.Int(nullable: false),
                        Special3_Index = c.Int(nullable: false),
                        Special3_Texture = c.Int(nullable: false),
                        Textures_Type = c.Int(nullable: false),
                        Textures_Index = c.Int(nullable: false),
                        Textures_Texture = c.Int(nullable: false),
                        Hat_Type = c.Int(nullable: false),
                        Hat_Index = c.Int(nullable: false),
                        Hat_Texture = c.Int(nullable: false),
                        Glasses_Type = c.Int(nullable: false),
                        Glasses_Index = c.Int(nullable: false),
                        Glasses_Texture = c.Int(nullable: false),
                        EarPiece_Type = c.Int(nullable: false),
                        EarPiece_Index = c.Int(nullable: false),
                        EarPiece_Texture = c.Int(nullable: false),
                        Unknown3_Type = c.Int(nullable: false),
                        Unknown3_Index = c.Int(nullable: false),
                        Unknown3_Texture = c.Int(nullable: false),
                        Unknown4_Type = c.Int(nullable: false),
                        Unknown4_Index = c.Int(nullable: false),
                        Unknown4_Texture = c.Int(nullable: false),
                        Unknown5_Type = c.Int(nullable: false),
                        Unknown5_Index = c.Int(nullable: false),
                        Unknown5_Texture = c.Int(nullable: false),
                        Watch_Type = c.Int(nullable: false),
                        Watch_Index = c.Int(nullable: false),
                        Watch_Texture = c.Int(nullable: false),
                        Wristband_Type = c.Int(nullable: false),
                        Wristband_Index = c.Int(nullable: false),
                        Wristband_Texture = c.Int(nullable: false),
                        Unknown8_Type = c.Int(nullable: false),
                        Unknown8_Index = c.Int(nullable: false),
                        Unknown8_Texture = c.Int(nullable: false),
                        Unknown9_Type = c.Int(nullable: false),
                        Unknown9_Index = c.Int(nullable: false),
                        Unknown9_Texture = c.Int(nullable: false),
                        Created = c.DateTime(nullable: false, precision: 0),
                        Deleted = c.DateTime(precision: 0),
                    })
                .PrimaryKey(t => t.Id);
            
            CreateTable(
                "dbo.Characters",
                c => new
                    {
                        Id = c.Guid(nullable: false),
                        Forename = c.String(nullable: false, maxLength: 100, unicode: false),
                        Middlename = c.String(maxLength: 100, unicode: false),
                        Surname = c.String(nullable: false, maxLength: 100, unicode: false),
                        DateOfBirth = c.DateTime(nullable: false, precision: 0),
                        Gender = c.Short(nullable: false),
                        Alive = c.Boolean(nullable: false, storeType: "bit"),
                        Health = c.Int(nullable: false),
                        Armor = c.Int(nullable: false),
                        Ssn = c.Int(nullable: false),
                        Position_X = c.Single(nullable: false),
                        Position_Y = c.Single(nullable: false),
                        Position_Z = c.Single(nullable: false),
                        Model = c.String(nullable: false, maxLength: 200, unicode: false),
                        WalkingStyle = c.String(nullable: false, maxLength: 200, unicode: false),
                        ApparelId = c.Guid(nullable: false),
                        AppearanceId = c.Guid(nullable: false),
                        HeritageId = c.Guid(nullable: false),
                        LastPlayed = c.DateTime(precision: 0),
                        UserId = c.Guid(nullable: false),
                        Created = c.DateTime(nullable: false, precision: 0),
                        Deleted = c.DateTime(precision: 0),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo.Apparels", t => t.ApparelId, cascadeDelete: true)
                .ForeignKey("dbo.Appearances", t => t.AppearanceId, cascadeDelete: true)
                .ForeignKey("dbo.Heritages", t => t.HeritageId, cascadeDelete: true)
                .ForeignKey("dbo.Users", t => t.UserId, cascadeDelete: true)
                .Index(t => t.ApparelId)
                .Index(t => t.AppearanceId)
                .Index(t => t.HeritageId)
                .Index(t => t.UserId);
            
            CreateTable(
                "dbo.Appearances",
                c => new
                    {
                        Id = c.Guid(nullable: false),
                        EyeColorId = c.Int(nullable: false),
                        HairColorId = c.Int(nullable: false),
                        HairHighlightColor = c.Int(nullable: false),
                        Cheeks = c.Single(nullable: false),
                        EyesWidth = c.Single(nullable: false),
                        Lips = c.Single(nullable: false),
                        Brows_X = c.Single(nullable: false),
                        Brows_Y = c.Single(nullable: false),
                        Brows_Z = c.Single(nullable: false),
                        CheekBones_X = c.Single(nullable: false),
                        CheekBones_Y = c.Single(nullable: false),
                        CheekBones_Z = c.Single(nullable: false),
                        ChinProfile_X = c.Single(nullable: false),
                        ChinProfile_Y = c.Single(nullable: false),
                        ChinProfile_Z = c.Single(nullable: false),
                        ChinShape_X = c.Single(nullable: false),
                        ChinShape_Y = c.Single(nullable: false),
                        ChinShape_Z = c.Single(nullable: false),
                        Jaw_X = c.Single(nullable: false),
                        Jaw_Y = c.Single(nullable: false),
                        Jaw_Z = c.Single(nullable: false),
                        Nose_X = c.Single(nullable: false),
                        Nose_Y = c.Single(nullable: false),
                        Nose_Z = c.Single(nullable: false),
                        NoseProfile_X = c.Single(nullable: false),
                        NoseProfile_Y = c.Single(nullable: false),
                        NoseProfile_Z = c.Single(nullable: false),
                        NoseTip_X = c.Single(nullable: false),
                        NoseTip_Y = c.Single(nullable: false),
                        NoseTip_Z = c.Single(nullable: false),
                        Age_Type = c.Int(nullable: false),
                        Age_Index = c.Int(nullable: false),
                        Age_Opacity = c.Single(nullable: false),
                        Age_ColorType = c.Int(nullable: false),
                        Age_ColorId = c.Int(nullable: false),
                        Age_SecondColorId = c.Int(nullable: false),
                        Beard_Type = c.Int(nullable: false),
                        Beard_Index = c.Int(nullable: false),
                        Beard_Opacity = c.Single(nullable: false),
                        Beard_ColorType = c.Int(nullable: false),
                        Beard_ColorId = c.Int(nullable: false),
                        Beard_SecondColorId = c.Int(nullable: false),
                        Blush_Type = c.Int(nullable: false),
                        Blush_Index = c.Int(nullable: false),
                        Blush_Opacity = c.Single(nullable: false),
                        Blush_ColorType = c.Int(nullable: false),
                        Blush_ColorId = c.Int(nullable: false),
                        Blush_SecondColorId = c.Int(nullable: false),
                        Blemishes_Type = c.Int(nullable: false),
                        Blemishes_Index = c.Int(nullable: false),
                        Blemishes_Opacity = c.Single(nullable: false),
                        Blemishes_ColorType = c.Int(nullable: false),
                        Blemishes_ColorId = c.Int(nullable: false),
                        Blemishes_SecondColorId = c.Int(nullable: false),
                        Chest_Type = c.Int(nullable: false),
                        Chest_Index = c.Int(nullable: false),
                        Chest_Opacity = c.Single(nullable: false),
                        Chest_ColorType = c.Int(nullable: false),
                        Chest_ColorId = c.Int(nullable: false),
                        Chest_SecondColorId = c.Int(nullable: false),
                        Complexion_Type = c.Int(nullable: false),
                        Complexion_Index = c.Int(nullable: false),
                        Complexion_Opacity = c.Single(nullable: false),
                        Complexion_ColorType = c.Int(nullable: false),
                        Complexion_ColorId = c.Int(nullable: false),
                        Complexion_SecondColorId = c.Int(nullable: false),
                        Eyebrows_Type = c.Int(nullable: false),
                        Eyebrows_Index = c.Int(nullable: false),
                        Eyebrows_Opacity = c.Single(nullable: false),
                        Eyebrows_ColorType = c.Int(nullable: false),
                        Eyebrows_ColorId = c.Int(nullable: false),
                        Eyebrows_SecondColorId = c.Int(nullable: false),
                        Lipstick_Type = c.Int(nullable: false),
                        Lipstick_Index = c.Int(nullable: false),
                        Lipstick_Opacity = c.Single(nullable: false),
                        Lipstick_ColorType = c.Int(nullable: false),
                        Lipstick_ColorId = c.Int(nullable: false),
                        Lipstick_SecondColorId = c.Int(nullable: false),
                        Makeup_Type = c.Int(nullable: false),
                        Makeup_Index = c.Int(nullable: false),
                        Makeup_Opacity = c.Single(nullable: false),
                        Makeup_ColorType = c.Int(nullable: false),
                        Makeup_ColorId = c.Int(nullable: false),
                        Makeup_SecondColorId = c.Int(nullable: false),
                        MolesAndFreckles_Type = c.Int(nullable: false),
                        MolesAndFreckles_Index = c.Int(nullable: false),
                        MolesAndFreckles_Opacity = c.Single(nullable: false),
                        MolesAndFreckles_ColorType = c.Int(nullable: false),
                        MolesAndFreckles_ColorId = c.Int(nullable: false),
                        MolesAndFreckles_SecondColorId = c.Int(nullable: false),
                        SunDamage_Type = c.Int(nullable: false),
                        SunDamage_Index = c.Int(nullable: false),
                        SunDamage_Opacity = c.Single(nullable: false),
                        SunDamage_ColorType = c.Int(nullable: false),
                        SunDamage_ColorId = c.Int(nullable: false),
                        SunDamage_SecondColorId = c.Int(nullable: false),
                        Created = c.DateTime(nullable: false, precision: 0),
                        Deleted = c.DateTime(precision: 0),
                    })
                .PrimaryKey(t => t.Id);
            
            CreateTable(
                "dbo.Heritages",
                c => new
                    {
                        Id = c.Guid(nullable: false),
                        Mother = c.Int(nullable: false),
                        Father = c.Int(nullable: false),
                        Resemblance = c.Single(nullable: false),
                        SkinTone = c.Single(nullable: false),
                        Created = c.DateTime(nullable: false, precision: 0),
                        Deleted = c.DateTime(precision: 0),
                    })
                .PrimaryKey(t => t.Id);
            
            CreateTable(
                "dbo.CharacterSessions",
                c => new
                    {
                        Id = c.Guid(nullable: false),
                        Created = c.DateTime(nullable: false, precision: 0),
                        Connected = c.DateTime(precision: 0),
                        Disconnected = c.DateTime(precision: 0),
                        CharacterId = c.Guid(nullable: false),
                    })
                .PrimaryKey(t => t.Id)
                .ForeignKey("dbo.Characters", t => t.CharacterId, cascadeDelete: true)
                .Index(t => t.CharacterId);
            
        }
        
        public override void Down()
        {
            DropForeignKey("dbo.CharacterSessions", "CharacterId", "dbo.Characters");
            DropForeignKey("dbo.Characters", "UserId", "dbo.Users");
            DropForeignKey("dbo.Characters", "HeritageId", "dbo.Heritages");
            DropForeignKey("dbo.Characters", "AppearanceId", "dbo.Appearances");
            DropForeignKey("dbo.Characters", "ApparelId", "dbo.Apparels");
            DropIndex("dbo.CharacterSessions", new[] { "CharacterId" });
            DropIndex("dbo.Characters", new[] { "UserId" });
            DropIndex("dbo.Characters", new[] { "HeritageId" });
            DropIndex("dbo.Characters", new[] { "AppearanceId" });
            DropIndex("dbo.Characters", new[] { "ApparelId" });
            DropTable("dbo.CharacterSessions");
            DropTable("dbo.Heritages");
            DropTable("dbo.Appearances");
            DropTable("dbo.Characters");
            DropTable("dbo.Apparels");
        }
    }
}
